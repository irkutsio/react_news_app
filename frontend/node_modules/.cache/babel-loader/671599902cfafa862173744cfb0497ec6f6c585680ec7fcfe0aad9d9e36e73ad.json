{"ast":null,"code":"var _jsxFileName = \"H:\\\\\\u041F\\u0430\\u043F\\u043A\\u0430 \\u0418\\u0440\\u044B\\\\udemy\\\\react\\\\react router\\\\frontend\\\\src\\\\pages\\\\EventDetailsPage.jsx\",\n  _s = $RefreshSig$();\nimport { json, useRouteLoaderData } from 'react-router-dom';\nimport { EventItem } from '../components/EventItem';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const EventDetailsPage = () => {\n  _s();\n  // const params = useParams();\n  const data = useRouteLoaderData('event-detail');\n  // console.log(data)\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(EventItem, {\n      event: data.event\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 4\n    }, this)\n  }, void 0, false);\n};\n_s(EventDetailsPage, \"4DBW6nwrvXRMSwRBgIay5Sszcp8=\", false, function () {\n  return [useRouteLoaderData];\n});\n_c = EventDetailsPage;\nexport const loaderDetails = async ({\n  req,\n  params\n}) => {\n  console.log(params);\n  const id = params.eventId;\n  const response = await fetch('http://localhost:8080/events/' + id);\n  if (!response.ok) {\n    throw json({\n      message: 'could not fetch for events details'\n    }, {\n      status: 500\n    });\n  } else {\n    return response;\n  }\n};\nvar _c;\n$RefreshReg$(_c, \"EventDetailsPage\");","map":{"version":3,"names":["json","useRouteLoaderData","EventItem","jsxDEV","_jsxDEV","Fragment","_Fragment","EventDetailsPage","_s","data","children","event","fileName","_jsxFileName","lineNumber","columnNumber","_c","loaderDetails","req","params","console","log","id","eventId","response","fetch","ok","message","status","$RefreshReg$"],"sources":["H:/Папка Иры/udemy/react/react router/frontend/src/pages/EventDetailsPage.jsx"],"sourcesContent":["import { json, useRouteLoaderData } from 'react-router-dom';\r\nimport { EventItem } from '../components/EventItem';\r\n\r\nexport const EventDetailsPage = () => {\r\n\t// const params = useParams();\r\n\tconst data = useRouteLoaderData('event-detail')\r\n\t// console.log(data)\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<EventItem event={data.event} />\r\n\t\t</>\r\n\t);\r\n};\r\n\r\nexport const loaderDetails = async ({ req, params }) => {\r\n\tconsole.log(params);\r\n\r\n\tconst id = params.eventId;\r\n\r\n\tconst response = await fetch('http://localhost:8080/events/' + id);\r\n\r\n\r\n\r\n\tif (!response.ok) {\r\n\t\tthrow json({ message: 'could not fetch for events details' }, { status: 500 });\r\n\t} else {\r\n\t\treturn response;\r\n\t}\r\n};\r\n"],"mappings":";;AAAA,SAASA,IAAI,EAAEC,kBAAkB,QAAQ,kBAAkB;AAC3D,SAASC,SAAS,QAAQ,yBAAyB;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAEpD,OAAO,MAAMC,gBAAgB,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACrC;EACA,MAAMC,IAAI,GAAGR,kBAAkB,CAAC,cAAc,CAAC;EAC/C;;EAEA,oBACCG,OAAA,CAAAE,SAAA;IAAAI,QAAA,eACCN,OAAA,CAACF,SAAS;MAACS,KAAK,EAAEF,IAAI,CAACE;IAAM;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE;EAAC,gBAC/B,CAAC;AAEL,CAAC;AAACP,EAAA,CAVWD,gBAAgB;EAAA,QAEfN,kBAAkB;AAAA;AAAAe,EAAA,GAFnBT,gBAAgB;AAY7B,OAAO,MAAMU,aAAa,GAAG,MAAAA,CAAO;EAAEC,GAAG;EAAEC;AAAO,CAAC,KAAK;EACvDC,OAAO,CAACC,GAAG,CAACF,MAAM,CAAC;EAEnB,MAAMG,EAAE,GAAGH,MAAM,CAACI,OAAO;EAEzB,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,+BAA+B,GAAGH,EAAE,CAAC;EAIlE,IAAI,CAACE,QAAQ,CAACE,EAAE,EAAE;IACjB,MAAM1B,IAAI,CAAC;MAAE2B,OAAO,EAAE;IAAqC,CAAC,EAAE;MAAEC,MAAM,EAAE;IAAI,CAAC,CAAC;EAC/E,CAAC,MAAM;IACN,OAAOJ,QAAQ;EAChB;AACD,CAAC;AAAC,IAAAR,EAAA;AAAAa,YAAA,CAAAb,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}